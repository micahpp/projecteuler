
def problem_1():
    """
    If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
    Find the sum of all the multiples of 3 or 5 below 1000.
    """
    return sum(x for x in range(1000) if x % 3 == 0 or x % 5 == 0)

def problem_2():
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    """
    ans = 0
    fib = [1,1]
    while fib[1] < 4000000:
        x = sum(fib)
        if not x % 2:
            ans += x
        fib = [fib[1], x]
    return ans

def problem_3():
    """
    The prime factors of 13195 are 5, 7, 13 and 29.
    What is the largest prime factor of the number 600851475143 ?
    """
    i, n = 2, 600851475143
    while i * i <= n:
        if n % i: i += 1
        else: n //= i
    return n



if __name__ == '__main__':
    print(problem_3())
